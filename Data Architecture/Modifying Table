-- Modifying data structures

CREATE TABLE "users"(
"id" SERIAL, 
"first"_name" VARCHAR(20), 
"last_name" VARCHAR(20),
"nickname" VARCHAR(20)
);

ALTER TABLE "users" ADD COLUMN "email" VARCHAR;
ALTER TABLE "users" ALTER COLUMN "first_name" SET DATA TYPE VARCHAR;
ALTER TABLE "users" ALTER COLUMN "last_name" SET DATA TYPE VARCHAR;
ALTER TABLE "users" DROP COLUMN "nickname";

-- Exercise Instructions
-- Explore the structure of the three tables in the provided SQL workspace. We'd like to make the following changes:

-- It was found out that email addresses can be longer than 50 characters. We decided to remove the limit on email address lengths to keep things simple.
-- We'd like the course ratings to be more granular than just integers 0 to 10, also allowing values such as 6.45 or 9.5
-- We discovered a potential issue with the registrations table that will manifest itself as the number of new students and new courses keeps increasing. Identify the issue and fix it.


-- \dt commando to see the tables 
-- \d students to see the table

INSERT INTO "courses" ("code", "rating") -- inserting new values
VALUES ('PHYS-101', 9.786)


ALTER TABLE "students" ALTER COLUMN "email_address" SET DATA TYPE VARCHAR;
ALTER TABLE "courses" ALTER COLUMN "rating" SET DATA TYPE REAL;
ALTER TABLE "registrations" ALTER COLUMN "student_id" SET DATA TYPE INTEGER;
ALTER TABLE "registrations" ALTER COLUMN "course_id" SET DATA TYPE INTEGER;

CREATE TABLE "demo" (
"id" SERIAL);

DROP TABLE "demo"; -- removes all the data in the table and the whole table

CREATE TABLE "demo" (
"id" SERIAL
"name" VARCHAR
);

INSERT INTO "demo" ("name") VALUES ('Alice'), ('Bob');

TRUNCATE TABLE "demo"; -- table actually does exists but there is no data into it. 

TRUNCATE TABLE "demo" RESTART IDENTITY; -- To avoid the incremental serial. 

COMMNET ON COLUMN "demo"."name" IS "both first and last name";

\d+ demo -- to see the comment of the table. 



