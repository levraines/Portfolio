-- How many of the sales reps have more than 5 accounts that they manage?

SELECT COUNT(s.id)  
FROM sales_reps AS s
INNER JOIN accounts AS a
ON s.id = a.sales_rep_id
GROUP BY a.sales_rep_id
HAVING count(a.sales_rep_id) > 5;

SELECT s.id, s.name, COUNT(*) num_accounts
FROM accounts a
JOIN sales_reps s
ON s.id = a.sales_rep_id
GROUP BY s.id, s.name
HAVING COUNT(*) > 5
ORDER BY num_accounts;

SELECT COUNT(*) num_reps_above5
FROM(SELECT s.id, s.name, COUNT(*) num_accounts
     FROM accounts a
     JOIN sales_reps s
     ON s.id = a.sales_rep_id
     GROUP BY s.id, s.name
     HAVING COUNT(*) > 5
     ORDER BY num_accounts) AS Table1;

-- How many accounts have more than 20 orders?

SELECT count(a.id) AS Accounts_number
FROM accounts AS a
INNER JOIN
orders AS o
ON a.id = o.account_id
GROUP BY o.account_id
HAVING count(account_id) > 20
ORDER BY Accounts_number ASC;


SELECT a.id, a.name, COUNT(*) num_orders
FROM accounts a
JOIN orders o
ON a.id = o.account_id
GROUP BY a.id, a.name
HAVING COUNT(*) > 20
ORDER BY num_orders;

-- Which account has the most orders?

SELECT count(a.id) AS Accounts_number, a.name AS account_name
FROM accounts AS a
INNER JOIN
orders AS o
ON a.id = o.account_id
GROUP BY o.account_id
HAVING count(account_id) > 20
ORDER BY count(a.id) DESC
LIMIT 1;

SELECT a.id, a.name, COUNT(*) num_orders
FROM accounts a
JOIN orders o
ON a.id = o.account_id
GROUP BY a.id, a.name
ORDER BY num_orders DESC
LIMIT 1;

-- Which accounts spent more than 30,000 usd total across all orders?

SELECT a.name AS account_name, SUM(o.total_amt_usd) as USD_total
FROM accounts AS a
INNER JOIN
orders AS o
ON a.id = o.account_id
GROUP BY a.name
HAVING SUM(o.total_amt_usd) > 30000
ORDER BY SUM(o.total_amt_usd) DESC;

SELECT a.id, a.name, SUM(o.total_amt_usd) total_spent
FROM accounts a
JOIN orders o
ON a.id = o.account_id
GROUP BY a.id, a.name
HAVING SUM(o.total_amt_usd) > 30000
ORDER BY total_spent;

-- Which accounts spent less than 1,000 usd total across all orders?

SELECT a.name AS account_name, SUM(o.total_amt_usd) as USD_total
FROM accounts AS a
INNER JOIN
orders AS o
ON a.id = o.account_id
GROUP BY a.name
HAVING SUM(o.total_amt_usd) < 1000
ORDER BY SUM(o.total_amt_usd) DESC;

SELECT a.id, a.name, SUM(o.total_amt_usd) total_spent
FROM accounts a
JOIN orders o
ON a.id = o.account_id
GROUP BY a.id, a.name
HAVING SUM(o.total_amt_usd) < 1000
ORDER BY total_spent;

-- Which account has spent the most with us?

SELECT a.name AS account_name, SUM(o.total_amt_usd) as USD_total
FROM accounts AS a
INNER JOIN
orders AS o
ON a.id = o.account_id
GROUP BY a.name
ORDER BY SUM(o.total_amt_usd) DESC
LIMIT 1;

SELECT a.id, a.name, SUM(o.total_amt_usd) total_spent
FROM accounts a
JOIN orders o
ON a.id = o.account_id
GROUP BY a.id, a.name
ORDER BY total_spent DESC
LIMIT 1;

-- Which account has spent the least with us?

SELECT a.name AS account_name, SUM(o.total_amt_usd) as USD_total
FROM accounts AS a
INNER JOIN
orders AS o
ON a.id = o.account_id
GROUP BY a.name
ORDER BY SUM(o.total_amt_usd) ASC
LIMIT 1;

SELECT a.id, a.name, SUM(o.total_amt_usd) total_spent
FROM accounts a
JOIN orders o
ON a.id = o.account_id
GROUP BY a.id, a.name
ORDER BY total_spent
LIMIT 1;

-- Which accounts used facebook as a channel to contact customers more than 6 times?

SELECT a.name AS account_name, COUNT(w.channel) AS CONTACT_ratio
FROM accounts AS a
INNER JOIN web_events AS w
ON a.id = w.account_id
WHERE w.channel = 'facebook'
GROUP BY a.name
HAVING COUNT(w.channel) > 6
ORDER BY COUNT(w.channel)DESC;

SELECT a.id, a.name, w.channel, COUNT(*) use_of_channel
FROM accounts a
JOIN web_events w
ON a.id = w.account_id
GROUP BY a.id, a.name, w.channel
HAVING COUNT(*) > 6 AND w.channel = 'facebook'
ORDER BY use_of_channel;

-- Which account used facebook most as a channel?

SELECT a.name AS account_name, COUNT(w.channel) AS CONTACT_ratio
FROM accounts AS a
INNER JOIN web_events AS w
ON a.id = w.account_id
WHERE w.channel = 'facebook'
GROUP BY a.name
HAVING COUNT(w.channel) > 6
ORDER BY COUNT(w.channel) DESC
LIMIT 1;

SELECT a.id, a.name, w.channel, COUNT(*) use_of_channel
FROM accounts a
JOIN web_events w
ON a.id = w.account_id
WHERE w.channel = 'facebook'
GROUP BY a.id, a.name, w.channel
ORDER BY use_of_channel DESC
LIMIT 1;

-- Which channel was most frequently used by most accounts?

SELECT w.channel AS channel, COUNT(a.id) AS CONTACT_ratio
FROM accounts AS a
INNER JOIN web_events AS w
ON a.id = w.account_id
GROUP BY w.channel
ORDER BY COUNT(a.id) DESC;

SELECT a.id, a.name, w.channel, COUNT(*) use_of_channel
FROM accounts a
JOIN web_events w
ON a.id = w.account_id
GROUP BY a.id, a.name, w.channel
ORDER BY use_of_channel DESC
LIMIT 10;

