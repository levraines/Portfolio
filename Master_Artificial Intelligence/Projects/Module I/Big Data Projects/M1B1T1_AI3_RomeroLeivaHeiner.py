# -*- coding: utf-8 -*-
"""Tarea_Heiner_Romero.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17iVH4THOz2Lqq190yjJzcbYO0JJWwp4g

### Tarea 3: Procesamiento de Datos con Spark
"""

# Instalando PySpark en JupyterLab
!pip install pyspark

# Importando PySpark
import pyspark

# Cambiando ubicacion del directorio de trabajo
import os, sys
os.chdir("/Users/heinerleivagmail.com")
print(os.getcwd())

# Importando la Sesion de Spark
from pyspark.sql import SparkSession

# Creando la instancia de computo
spark = SparkSession.builder.appName("Tarea").getOrCreate()

# Leyendo el dataset
data = spark.read.option("header", "true").option("inferSchema", "true").csv("natality.csv")

# Imprimiendo resultado
data.printSchema()

"""### Inicio de ejercicios -- PySpark --"""

# Obtén en qué 10 estados nacieron más niños y niñas en 2003.
data.filter("year = 2003").\
    groupBy("state", "source_year").\
    count().orderBy(data.state.asc()).\
show()

# Obtén la media de peso de los niños y niñas por año y estado.
from pyspark.sql.functions import col, avg
data.groupBy("year", "state").\
    avg("weight_pounds").\
    withColumnRenamed("avg(weight_pounds)", "media_peso").\
    sort(col("media_peso").desc()).\
show()

# Evolución por año y por mes del número de niños y niñas nacidas (Resultado por separado con una sola consulta).
from pyspark.sql.functions import when
from pyspark.sql.functions import count as _count
data.groupBy("year", "month").\
    agg(_count(when(col("is_male") == True, True)),\
        _count(when(col("is_male") == False, True))).\
        withColumnRenamed("count(CASE WHEN (is_male = true) THEN true END)", "Ninos").\
        withColumnRenamed("count(CASE WHEN (is_male = false) THEN true END)", "Ninas").\
        sort(col("year").desc())\
        .show(100)
# Para este ejercicio se contrasta el resultado con el primer ejercicio (obtén en qué 10 estados nacieron más niños y niñas en 2003)
# ya que en total para el 2003 fue de 59, ya que, los estados: 
# PA + WA = 59 y si se suman los obtenidos para 2003 para este ejercicio tenemos 59.

# Obtén los tres meses de 2005 en que nacieron más niños y niñas.
data.filter("year = 2005").\
    groupBy("month", "source_year").\
    count().\
    withColumnRenamed("count", "cantidad_nacimientos").\
    sort(col("cantidad_nacimientos").desc()).\
show(3)

# Primera forma de resolver el ejercicio. 
# Obtén los estados donde las semanas de gestación son superiores a la media de EE. UU.
data.select(avg("gestation_weeks")).show()

# Despues de obtenido el resultado de la media, nos piden hacer un filtro por dicho resultado para mostrar los estados que tienen semanas superiores a la media de todo USA
data.select("state", "gestation_weeks").\
    filter(col("gestation_weeks")> 38.65).\
    distinct().\
    orderBy(data.gestation_weeks.desc()).\
    show(40)

# Segunda forma de resolver el ejercicio, usando sub select en PySpark
# Obtén los estados donde las semanas de gestación son superiores a la media de EE. UU.
from pyspark.sql import functions as F
data.select("state", "gestation_weeks").\
    distinct().where(F.col("gestation_weeks") > data.select(F.avg("gestation_weeks")).\
    head()[0]).\
    orderBy(data.gestation_weeks.desc()).\
    show(40)

# Primera forma de resolver el ejercicio. 
# Obtén los cinco estados donde la media de edad de las madres ha sido mayor.
data.select(avg("mother_age")).show()

# Despues de obtener el resultado de la edad media de la madre, nos piden hacer un filtro para saver los cinco estados donde la media de edad de las madres ha sido mayor:
data.select("state", "mother_age").\
    filter(col("mother_age")> 25.45).\
    distinct().\
    orderBy(data.mother_age.desc()).\
    show(100)

# Segunda forma de resolver el ejercicio, usando sub select en PySpark
# Obtén los cinco estados donde la media de edad de las madres ha sido mayor.
data.select("state", "mother_age").\
    distinct().where(F.col("mother_age") > data.select(F.avg("mother_age")).\
    head()[0]).\
    orderBy(data.mother_age.desc()).\
    show(100)

# Indica cómo influye en el peso del bebé y las semanas de gestación que la madre haya tenido un parto múltiple (campo plurality) a las que no lo han tenido.
# Se opta por utilizar la media ya que es el estadistico mas facil para comparar. 
data.groupBy("plurality").\
    agg(F.avg("weight_pounds"), F.avg("gestation_weeks")).\
    withColumnRenamed("plurality", "Qty_nacimientos_por_parto").\
    withColumnRenamed("avg(weight_pounds)", "Peso_medio").\
    withColumnRenamed("avg(gestation_weeks)", "Media_de_semanas_gestacion").\
    sort(col("Qty_nacimientos_por_parto").asc()).\
    show()

"""### Inicio de ejercicios -- Spark - SQL --"""

data.createOrReplaceTempView("natality")

# Obtén en qué 10 estados nacieron más niños y niñas en 2003.
spark.sql("SELECT state, count(source_year) AS Cantidad_nacimientos\
          FROM natality WHERE year = 2003\
          GROUP BY state\
          ORDER BY 2 DESC").show()

# Obtén la media de peso de los niños y niñas por año y estado.
spark.sql("SELECT AVG(weight_pounds) AS Media_peso, state, year\
          FROM natality \
          GROUP BY state, year\
          ORDER BY 1 DESC").show()

# Evolución por año y por mes del número de niños y niñas nacidas (Resultado por separado con una sola consulta).
spark.sql("SELECT year, month, \
          COUNT(CASE WHEN is_male = 'True' THEN 1 END) AS NINOS, \
          COUNT(CASE WHEN is_male = 'False' THEN 1 END) AS NINAS \
          FROM natality \
          GROUP BY year, month\
          ORDER BY 1 DESC").show(150)

# Para este ejercicio se contrasta el resultado con el primer ejercicio (obtén en qué 10 estados nacieron más niños y niñas en 2003)
# ya que en total para el 2003 fue de 59, ya que, los estados: 
# PA + WA = 59 y si se suman los obtenidos para 2003 para este ejercicio tenemos 59.

# Obtén los tres meses de 2005 en que nacieron más niños y niñas.
spark.sql("SELECT month, count(source_year) AS Cantidad_nacimientos\
          FROM natality \
          WHERE year = 2005 \
          GROUP BY month \
          ORDER BY 2 DESC \
          LIMIT 3").show()

# Primera forma de resolver el ejercicio usando un sub select 
# Obtén los estados donde las semanas de gestación son superiores a la media de EE. UU.
spark.sql("SELECT DISTINCT(state) AS State, gestation_weeks\
            FROM natality WHERE gestation_weeks > (SELECT AVG(gestation_weeks) AS Media_gestacion_USA FROM natality)\
            ORDER BY 2 DESC").show(100)

# Segunda forma de resolver el ejercicio usando el valor obtenido como la media
# Obtén los estados donde las semanas de gestación son superiores a la media de EE. UU. -- Alternativa
spark.sql("SELECT AVG(gestation_weeks)\
            FROM natality").show()

# Segunda forma de resolver el ejercicio usando el valor obtenido como la media
spark.sql("SELECT DISTINCT(state) AS State, gestation_weeks\
            FROM natality WHERE gestation_weeks > 38.65\
            ORDER BY 2 DESC").show(100)

# Primera forma de resolver el ejercicio usando un sub select 
# Obtén los cinco estados donde la media de edad de las madres ha sido mayor.
spark.sql("SELECT DISTINCT(state) AS State, mother_age\
            FROM natality WHERE mother_age > (SELECT AVG(mother_age) FROM natality)\
            ORDER BY 2 DESC\
            LIMIT 5").show()

# Segunda forma de resolver el ejercicio usando el valor obtenido como la media
# Obtén los cinco estados donde la media de edad de las madres ha sido mayor -- Alternativa
spark.sql("SELECT AVG(mother_age)\
            FROM natality").show()

# Segunda forma de resolver el ejercicio usando el valor obtenido como la media
spark.sql("SELECT DISTINCT(state) AS State, mother_age\
            FROM natality WHERE mother_age > 25.45\
            ORDER BY 2 DESC").show(100)

#  Indica cómo influye en el peso del bebé y las semanas de gestación que la madre haya tenido un parto múltiple (campo plurality) a las que no lo han tenido.
spark.sql("SELECT DISTINCT(plurality)\
            FROM natality\
            ORDER BY 1 DESC").show()

# Indica cómo influye en el peso del bebé y las semanas de gestación que la madre haya tenido un parto múltiple (campo plurality) a las que no lo han tenido.
# Se opta por utilizar la media ya que es el estadistico mas facil para comparar. 
spark.sql("SELECT DISTINCT(plurality) AS Qty_nacimientos_por_parto, AVG(weight_pounds) AS Peso_medio, AVG(gestation_weeks) AS Media_de_semanas_gestacion\
            FROM natality\
            GROUP BY Qty_nacimientos_por_parto\
            ORDER BY 1 ASC").show()